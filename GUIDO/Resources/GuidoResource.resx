<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guido" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="InvalidGuid" xml:space="preserve">
    <value>This is not a valid GUID!</value>
  </data>
</root>